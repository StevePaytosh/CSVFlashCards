<body>
<div class="s">
<div id="title">Korean Flash Cards</div>
<p>
<br>
  <div data-bind=" visible: QuestionViewModel.DisplayQuestionCounter()" style="margin-left: 20px; color:red; font-size: 25px; text-align:center;">
  Questions Remaining: 
<span data-bind="text: QuestionViewModel.QuestionCounter()"/>
</div>
  

  <div id="out" data-bind="visible: QuestionViewModel.DisplayCard()">
   <div id="category" data-bind="text:QuestionViewModel.category(),  visible: QuestionViewModel.DisplayCategory()"></div>
   <div id="question-header" class="header">Q</div>
  <div id="question" class="information" data-bind="text:QuestionViewModel.korean(), visible: QuestionViewModel.DisplayKorean()"></div>
   <div id="answer-header" class="header" >A</div>
  <div id="answer" class="information" data-bind="text:QuestionViewModel.english(), visible: QuestionViewModel.DisplayEnglish()"></div>
    <div id="question-addon" class="addon" data-bind="text:QuestionViewModel.romanized(), visible: QuestionViewModel.DisplayRomanizedQ()"> </div>
    <div id="answer-addon" class="addon" data-bind="text:QuestionViewModel.romanized(), visible: QuestionViewModel.DisplayRomanizedA()"></div>
  </div>
  
<div id="centerButtons" data-bind="visible:QuestionViewModel.ShowCenterButtons()">
<button class="centerButton" id="Next" data-bind="click:GetNext, visible:QuestionViewModel.ShowNextButton()">Next</button><br>
<button class="centerButton" id="Reload" data-bind="click:ReloadQuestions, visible:QuestionViewModel.ShowReloadButton()">Reload Questions</button><br>
<button class="centerButton" id="Reset" data-bind="click:ResetQuestions, visible:false;">Reset</button><br>
</div>
  <p>
   
    <div style="margin-left:25vw;">
      <h1>Options </h1>
    <div style="float:left; width:auto; display:table-cell;">
   
  <p><input type="checkbox" value="Hangul" data-bind="checked:QuestionViewModel.chkHangul, event: { change: checkBoxChange() }, enable:QuestionViewModel.EnableHangul();"/>Hangul</p>
      <p><input type="checkbox" value="Hanja" data-bind="checked:QuestionViewModel.chkHanja, event: { change: checkBoxChange() }, enable:QuestionViewModel.EnableHanja();"/>Hanja</p>
      <p><input type="checkbox" value="HangulNumbers" data-bind="checked:QuestionViewModel.chkHangulNumbers, event: { change: checkBoxChange() }, enable:QuestionViewModel.EnableHangulNumbers();"/>Numbers (Hangul)</p>
      <p><input type="checkbox" value="Words" data-bind="checked:QuestionViewModel.chkWords, event: { change: checkBoxChange() }, enable:QuestionViewModel.EnableWords();"/>Words</p>
      <p><input type="checkbox" value="Phrases" data-bind="checked:QuestionViewModel.chkPhrases, event: { change: checkBoxChange() }, enable:QuestionViewModel.EnablePhrases();"/>Phrases</p>
   
   </div>
   <div style="margin-left:auto; display:table-cell;">
      <p><input type="checkbox" value="Category" data-bind="checked:QuestionViewModel.chkCategory, event: { change: checkBoxChangeDisplay() }"/>Show Category</p>
      <p><input type="checkbox" value="Romanized" data-bind="checked:QuestionViewModel.chkRomanized, event: { change: checkBoxChangeDisplay() }"/>Show Romanized</p>
      <p><input type="checkbox" value="RepeatQuestions" data-bind="checked:QuestionViewModel.chkRepeatQuestions, event: { change: checkBoxChangeDisplay() }"/>Repeat Question</p>
     <p><input type="checkbox" value="KoreanToEnglish" data-bind="checked:QuestionViewModel.chkKoreanToEnglish, event: { change: checkBoxChangeDisplay() }, enable: false;"/>Korean To English Questions (currently unavailable)</p>
        <p><input type="checkbox" value="RandomNumber" data-bind="checked:QuestionViewModel.chkRandomNumber, event: { change: toggleRandomNumber() }, enable: false;"/>Random Number (currently unavailable)</p>

   </div>
  </div>
 </div>
</body>